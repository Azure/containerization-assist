name: Build & Publish
on: [workflow_dispatch]

permissions:
  contents: read

jobs:
  JobBuild:
      name: release
      runs-on: ubuntu-latest
      permissions: 
        actions: read
        contents: read
        deployments: read
        packages: none
      steps:
        
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Use Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 20

      # Run install dependencies
      - name: Install dependencies
        run: npm install

      # Ensure project builds successfully before creating release
      - name: Build 
        run: npm run build

      - name: Get current version from package.json
        id: package_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "current-version=$VERSION" >> $GITHUB_OUTPUT

  JobsPublish:
    name: publish
    runs-on: ubuntu-latest
    needs: JobBuild
    permissions: 
        actions: read
        contents: write
        deployments: read
        packages: none
        id-token: write
    steps:

      # Checkout the code again for release
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Use Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 20

      # Run install dependencies
      - name: Install dependencies
        run: npm install

      - name: Build 
        run: npm run build

      - name: Create target package
        run: npm pack

      - name: federated login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          auth-type: IDENTITY
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
      # az storage blob upload -f ${Folder to Copy} -c ${drops/<BlobPath>} --account-name azuresdkpartnerdrops --auth-mode login
      - name: Upload files to partner drop folder
        run: |
            az account show
