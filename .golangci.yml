version: "2"
run:
  go: "1.24.4"
  tests: true
linters:
  disable:
    - depguard         # Disable import restrictions after simplification
    - exhaustruct      # Disable exhaustive struct checking (too noisy)
    - nlreturn         # Disable new line return rule (too strict)
    - wsl              # Disable whitespace linting (too opinionated)
  enable:
    # Core static analysis
    - revive           # Enhanced go lint
    - staticcheck      # Advanced static analysis
    - errcheck         # Error checking
    - unused           # Unused code detection
    - deadcode         # Dead code detection
    - ineffassign      # Ineffectual assignment detection
    - gocyclo          # Cyclomatic complexity checks
    
    # Security and bug prevention
    - gosec            # Security analysis
    - bodyclose        # Check HTTP body close
    - rowserrcheck     # Check SQL row errors
    - sqlclosecheck    # Check SQL close
    - nilerr           # Check nil errors
    
    # Code quality and style
    - gofmt            # Proper formatting
    - goimports        # Import organization
    - misspell         # Spelling mistakes
    - unconvert        # Remove unnecessary conversions
    - unparam          # Detect unused parameters
    - prealloc         # Preallocate slices
    
    # Performance
    - gocritic         # Performance and style checks
    - maligned         # Struct alignment
    
    # Maintainability  
    - dupl             # Duplicate code detection
    - goconst          # Repeated strings detection
    - gomodguard       # Module dependencies guard
    - exportloopref    # Loop variable capture
    
    # Testing
    - testpackage      # Test package naming

linters-settings:
  # Complexity settings
  gocyclo:
    min-complexity: 15
  
  # Function length limits
  funlen:
    lines: 100
    statements: 50
    
  # Cognitive complexity
  gocognit:
    min-complexity: 20
    
  # Security settings
  gosec:
    excludes:
      - G304 # File path from variable - many legitimate uses
      - G404 # Weak random number generator - not all uses need crypto/rand
      
  # Code duplication
  dupl:
    threshold: 150
    
  # Performance settings
  gocritic:
    disabled-checks:
      - commentFormat  # Too opinionated
      - whyNoLint     # Not needed with our approach
    enabled-tags:
      - performance
      - style
      - experimental
      
  # Constants detection
  goconst:
    min-len: 3
    min-occurrences: 3
    
  # Misspelling
  misspell:
    locale: US
    
  # Import restrictions (if re-enabled later)
  depguard:
    rules:
      main:
        files:
          - "$all"
        allow:
          - "$gostd"
          - "github.com/Azure/container-kit"
          - "github.com/localrivet/gomcp"
          - "github.com/mark3labs/mcp-go"
          - "github.com/rs/zerolog"
          - "github.com/stretchr/testify"
          - "github.com/joho/godotenv"
          - "github.com/spf13/cobra"
          - "go.etcd.io/bbolt"
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - govet
        path: _test\.go
      - linters:
          - govet
        path: cmd/
      - linters:
          - govet
        path: tools/
      - linters:
          - revive
        path: pkg/mcp/security/types\.go
        text: "stutters"
    paths:
      - .*\.pb\.go$
      - .*_gen\.go$
      - cmd/*
      - vendor
      - .git
      - bin
      - dist
      - tools
      - tools/linters
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 1000  # High limit - actual budget enforced by quality-checks action
  max-same-issues: 200         # High limit - actual budget enforced by quality-checks action  
  new: false
formatters:
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
