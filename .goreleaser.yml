# .goreleaser.yml
# Build configuration for containerization-assist

version: 2

project_name: containerization-assist

before:
  hooks:
    # Ensure module download and verify
    - go mod download
    - go mod verify

builds:
  # MCP Server binary (only binary released)
  - id: containerization-assist-mcp
    main: ./cmd/mcp-server
    binary: containerization-assist-mcp
    tags:
      - mcp
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w -X main.Version={{.Version}} -X main.GitCommit={{.Commit}} -X main.BuildTime={{.Date}}
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - id: mcp
    # Use explicit naming to reflect MCP server artifact
    name_template: "containerization-assist-mcp_{{ .Os }}_{{ .Arch }}"
    builds:
      - containerization-assist-mcp
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE*
      - README.md

checksum:
  name_template: "checksums.txt"
  algorithm: sha256

signs:
  # Sign the checksum file with cosign (keyless via GitHub OIDC)
  - id: cosign-checksums
    cmd: cosign
    artifacts: checksum
    signature: "${artifact}.sig"
    args:
      - sign-blob
      - --yes
      - --output-signature
      - "${signature}"
      - "${artifact}"

  # Sign the archives (zip/tar.gz) with cosign as detached signatures
  - id: cosign-archives
    cmd: cosign
    artifacts: archive
    signature: "${artifact}.sig"
    args:
      - sign-blob
      - --yes
      - --output-signature
      - "${signature}"
      - "${artifact}"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - "^ci:"
  groups:
    - title: "üöÄ Features"
      regexp: "^feat"
    - title: "üêõ Bug Fixes"
      regexp: "^fix"
    - title: "üî® Refactoring"
      regexp: "^refactor"
    - title: "‚ö° Performance Improvements"
      regexp: "^perf"
    - title: "üîê Security"
      regexp: "^security"
    - title: "Other Changes"
      order: 999

release:
  github:
    owner: Azure
    name: containerization-assist

  # Release notes template
  header: |
    ## Containerization Assist {{ .Tag }}

    Welcome to Containerization Assist {{ .Tag }}! This release includes several improvements and bug fixes.

    ### Installation (MCP Server)

    The MCP server binary (containerization-assist-mcp) is provided for Linux, macOS (Intel & ARM), and Windows (amd64 & arm64).

    #### Quick Install (Windows PowerShell)
    ```powershell
    Set-ExecutionPolicy Bypass -Scope Process -Force; Invoke-WebRequest -Uri https://raw.githubusercontent.com/Azure/containerization-assist/main/scripts/setup-vscode.ps1 -OutFile setup-vscode.ps1; ./setup-vscode.ps1; Remove-Item setup-vscode.ps1
    ```

    #### Quick Install (macOS / Linux)
    ```bash
    curl -sSL https://raw.githubusercontent.com/Azure/containerization-assist/main/scripts/setup-vscode.sh | bash
    ```

    #### Manual Install
    1. Download the archive matching your platform.
    2. Extract the binary and place it on your PATH (e.g. /usr/local/bin or $HOME/bin).
    3. Verify: `containerization-assist-mcp --help`

    #### Documentation
    - User Guide: https://github.com/Azure/containerization-assist/blob/{{ .Tag }}/USER_GUIDE.md

    #### Verify Integrity & Signature
     - We publish SHA-256 checksums (checksums.txt) and cosign detached signatures (*.sig) for archives and the checksum file.
     - Verify checksum: match your artifact's SHA-256 against the line in checksums.txt.
     - Verify signature (cosign): cosign verify-blob --signature checksums.txt.sig checksums.txt

    For the complete, always up-to-date setup (including configuration, troubleshooting, and updates) please follow all steps in the User Guide above.

  footer: |
    ## Thanks!

    Thanks to all contributors who made this release possible!

    **Full Changelog**: https://github.com/Azure/containerization-assist/compare/{{ .PreviousTag }}...{{ .Tag }}

  # Set draft to true for manual review before publishing
  draft: false

snapshot:
  version_template: "{{ .Tag }}-next"

# Announce releases
announce:
  skip: true

# Automatically close milestone with matching name
milestones:
  - close: true
    fail_on_error: false

# GitHub Action specific configuration
github_urls:
  download: https://github.com

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"
