# Dockerfile scoring configuration
name: dockerfile-scoring
version: "1.0.0"

metadata:
  description: "Scoring configuration for Dockerfile quality assessment"
  author: "containerization-assist"
  created: "2024-01-01"

# Base score for all Dockerfiles
base_score: 50

# Maximum possible score
max_score: 100

# Timeout for scoring operations
timeout_ms: 5000

# Category weights (must sum to 1.0)
category_weights:
  correctness: 0.35
  efficiency: 0.25
  security: 0.20
  maintainability: 0.10
  completeness: 0.10

# Scoring rules - arrays of rule objects per category
rules:
  correctness:
    - name: "valid_syntax"
      matcher:
        type: "regex"
        pattern: "^FROM\\s+"
      points: 10
      weight: 0.4
      category: "correctness"
      description: "Valid Dockerfile syntax with FROM statement"
    - name: "proper_base_image"
      matcher:
        type: "regex"
        pattern: "FROM\\s+[a-zA-Z0-9][a-zA-Z0-9-._/]*:[a-zA-Z0-9][a-zA-Z0-9-._]*"
      points: 8
      weight: 0.3
      category: "correctness"
      description: "Base image with specific version tag"
    - name: "correct_build_commands"
      matcher:
        type: "regex"
        pattern: "(RUN|COPY|ADD|WORKDIR|ENV)"
      points: 8
      weight: 0.3
      category: "correctness"
      description: "Contains essential build commands"

  efficiency:
    - name: "multi_stage_build"
      matcher:
        type: "regex"
        pattern: "FROM.*AS\\s+\\w+"
      points: 15
      weight: 0.4
      category: "efficiency"
      description: "Uses multi-stage builds"
    - name: "layer_optimization"
      matcher:
        type: "regex"
        pattern: "RUN\\s+.*&&.*"
      points: 10
      weight: 0.3
      category: "efficiency"
      description: "Combines RUN commands to reduce layers"
    - name: "cache_utilization"
      matcher:
        type: "regex"
        pattern: "COPY\\s+(package.*json|requirements\\.txt|go\\.(mod|sum)|pom\\.xml|build\\.gradle)"
      points: 10
      weight: 0.3
      category: "efficiency"
      description: "Copies dependency files for cache optimization"

  security:
    - name: "non_root_user"
      matcher:
        type: "regex"
        pattern: "USER\\s+(?!root)"
      points: 15
      weight: 0.4
      category: "security"
      description: "Runs as non-root user"
    - name: "minimal_base_image"
      matcher:
        type: "regex"
        pattern: "FROM\\s+.*(-slim|-alpine|distroless)"
      points: 12
      weight: 0.3
      category: "security"
      description: "Uses minimal base images"
    - name: "no_secrets_exposed"
      matcher:
        type: "regex"
        pattern: "(password|secret|key|token)\\s*="
        count_threshold: 0
        comparison: "equal"
      points: 12
      weight: 0.3
      category: "security"
      description: "No hardcoded secrets detected"

  maintainability:
    - name: "clear_structure"
      matcher:
        type: "regex"
        pattern: "^#\\s+"
        count_threshold: 2
        comparison: "greater_than_or_equal"
      points: 8
      weight: 0.4
      category: "maintainability"
      description: "Contains explanatory comments"
    - name: "arg_usage"
      matcher:
        type: "regex"
        pattern: "ARG\\s+"
      points: 6
      weight: 0.3
      category: "maintainability"
      description: "Uses ARG for build-time variables"
    - name: "version_pinning"
      matcher:
        type: "regex"
        pattern: "FROM\\s+[^:]+:[^l][^a][^t][^e][^s][^t]"
      points: 6
      weight: 0.3
      category: "maintainability"
      description: "Avoids using 'latest' tag"

  completeness:
    - name: "all_dependencies"
      matcher:
        type: "regex"
        pattern: "(apt-get|apk|yum|dnf|pip|npm|yarn|gem)\\s+install"
      points: 10
      weight: 0.4
      category: "completeness"
      description: "Installs dependencies"
    - name: "proper_entrypoint"
      matcher:
        type: "regex"
        pattern: "(ENTRYPOINT|CMD)"
      points: 8
      weight: 0.3
      category: "completeness"
      description: "Defines container entrypoint"
    - name: "expose_ports"
      matcher:
        type: "regex"
        pattern: "EXPOSE\\s+\\d+"
      points: 8
      weight: 0.3
      category: "completeness"
      description: "Exposes necessary ports"