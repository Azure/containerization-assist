graph TD
    %% Container Kit MCP - 4-Layer Clean Architecture with CQRS and Event-Driven Design
    %% Current state: Clean architecture with Domain-Driven Design
    %% Single unified workflow with AI-powered automation and ML optimization

    Client[MCP Client<br/>Claude Desktop / CLI] --> MCPProtocol[MCP Protocol<br/>Model Context Protocol]
    MCPProtocol --> Server[MCP Server<br/>application/server.go]

    subgraph "4-Layer Clean Architecture"
        
        subgraph "API Layer"
            Interfaces[Essential Interfaces<br/>api/interfaces.go<br/>Tool definitions & contracts]
        end

        subgraph "Application Layer"
            Server --> Bootstrap[Dependency Injection<br/>application/bootstrap.go]
            Server --> Commands[CQRS Commands<br/>application/commands/]
            Server --> Queries[CQRS Queries<br/>application/queries/]
            Server --> Config[Configuration<br/>application/config/]
            Server --> SessionMgmt[Session Management<br/>application/session/]
        end

        subgraph "Domain Layer"
            Workflow[Core Workflow<br/>domain/workflow/<br/>Business logic]
            Events[Domain Events<br/>domain/events/<br/>Event coordination]
            Progress[Progress Tracking<br/>domain/progress/<br/>Business concept]
            Saga[Saga Orchestration<br/>domain/saga/<br/>Transaction coordination]
            Sampling[Domain Sampling<br/>domain/sampling/<br/>AI contracts]
        end

        subgraph "Infrastructure Layer"
            Steps[Workflow Steps<br/>infrastructure/steps/]
            ML[ML Integration<br/>infrastructure/ml/<br/>Build optimization]
            SamplingImpl[LLM Integration<br/>infrastructure/sampling/]
            ProgressImpl[Progress Implementation<br/>infrastructure/progress/]
            Prompts[MCP Prompts<br/>infrastructure/prompts/]
            Resources[MCP Resources<br/>infrastructure/resources/]
            Tracing[Observability<br/>infrastructure/tracing/]
            Utilities[Infrastructure Utils<br/>infrastructure/utilities/]
            Validation[Validation<br/>infrastructure/validation/]
        end
    end

    subgraph "10-Step Workflow Process"
        AnalyzeRepo[1. Analyze Repository<br/>Technology detection<br/>AI enhancement]
        GenDockerfile[2. Generate Dockerfile<br/>Optimized generation<br/>AI assistance]
        BuildImage[3. Build Image<br/>Docker construction<br/>AI error fixing]
        SetupCluster[4. Setup Kind Cluster<br/>Local K8s setup<br/>Registry integration]
        LoadImage[5. Load Image<br/>Image to cluster<br/>Validation]
        GenManifests[6. Generate K8s Manifests<br/>YAML generation<br/>AI optimization]
        DeployK8s[7. Deploy to K8s<br/>Application deployment<br/>AI error recovery]
        HealthProbe[8. Health Probe<br/>Endpoint discovery<br/>Health validation]
        VulnScan[9. Vulnerability Scan<br/>Security scanning<br/>AI analysis]
        Finalize[10. Finalize Result<br/>Workflow completion<br/>Cleanup]
    end

    subgraph "Event-Driven Coordination"
        EventBus[Event Bus<br/>Domain event publishing]
        EventHandlers[Event Handlers<br/>Workflow coordination]
        SagaCoord[Saga Coordinator<br/>Distributed transactions]
    end

    subgraph "ML-Powered Optimization"
        BuildOpt[Build Optimizer<br/>ML-enhanced builds]
        PatternRec[Pattern Recognizer<br/>Build pattern analysis]
        ErrorHist[Error History<br/>Learning from failures]
        ResourcePred[Resource Predictor<br/>Predictive allocation]
    end

    subgraph "Core Infrastructure"
        ErrorSystem[Rich Error System<br/>pkg/common/errors/<br/>Structured error handling]
        SessionStore[Session Storage<br/>BoltDB persistence]
        WorkspaceManager[Workspace Manager<br/>Isolated workspaces]
    end

    subgraph "External Integrations"
        Docker[Docker Engine<br/>Container runtime]
        Registry[Container Registry<br/>Image storage]
        Kubernetes[Kubernetes API<br/>Orchestration]
        Scanner[Security Scanners<br/>Trivy/Grype]
        AI[Azure OpenAI<br/>AI assistance]
    end

    %% Layer Dependencies (Clean Architecture)
    Interfaces --> Commands
    Interfaces --> Queries
    Commands --> Workflow
    Queries --> Workflow
    Commands --> Events
    Workflow --> Steps
    Events --> EventHandlers
    Saga --> SagaCoord

    %% Workflow Step Connections
    Commands --> AnalyzeRepo
    AnalyzeRepo --> GenDockerfile
    GenDockerfile --> BuildImage
    BuildImage --> SetupCluster
    SetupCluster --> LoadImage
    LoadImage --> GenManifests
    GenManifests --> DeployK8s
    DeployK8s --> HealthProbe
    HealthProbe --> VulnScan
    VulnScan --> Finalize

    %% Step Implementation Connections
    Steps --> AnalyzeRepo
    Steps --> GenDockerfile
    Steps --> BuildImage
    Steps --> SetupCluster
    Steps --> LoadImage
    Steps --> GenManifests
    Steps --> DeployK8s
    Steps --> HealthProbe
    Steps --> VulnScan
    Steps --> Finalize

    %% Event-Driven Connections
    Workflow --> Events
    Events --> EventBus
    EventBus --> EventHandlers
    EventHandlers --> SagaCoord

    %% ML Integration Connections
    ML --> BuildOpt
    ML --> PatternRec
    ML --> ErrorHist
    ML --> ResourcePred
    BuildImage --> BuildOpt
    GenDockerfile --> PatternRec
    Steps --> ErrorHist

    %% Core Infrastructure Connections
    Workflow --> SessionStore
    Workflow --> WorkspaceManager
    Steps --> ErrorSystem
    Progress --> ProgressImpl

    %% External System Connections
    Steps --> Docker
    Steps --> Registry
    Steps --> Kubernetes
    Steps --> Scanner
    SamplingImpl --> AI

    %% Session and State Management
    SessionMgmt --> SessionStore
    SessionStore --> BoltDB[BoltDB<br/>Embedded storage]

    %% Progress and Observability
    ProgressImpl --> Tracing
    Steps --> ProgressImpl

    %% Styling
    classDef clientStyle fill:#e1f5fe,stroke:#0288d1,stroke-width:3px
    classDef apiStyle fill:#e8f5e9,stroke:#2e7d32,stroke-width:3px
    classDef applicationStyle fill:#e3f2fd,stroke:#1565c0,stroke-width:3px
    classDef domainStyle fill:#f3e5f5,stroke:#6a1b9a,stroke-width:3px
    classDef infraStyle fill:#fff3e0,stroke:#ef6c00,stroke-width:3px
    classDef workflowStyle fill:#fce4ec,stroke:#c2185b,stroke-width:2px
    classDef eventStyle fill:#e0f2f1,stroke:#00695c,stroke-width:2px
    classDef mlStyle fill:#f1f8e9,stroke:#558b2f,stroke-width:2px
    classDef coreStyle fill:#fafafa,stroke:#424242,stroke-width:2px
    classDef externalStyle fill:#eceff1,stroke:#455a64,stroke-width:1px,stroke-dasharray: 5 5

    class Client,MCPProtocol clientStyle
    class Interfaces apiStyle
    class Server,Bootstrap,Commands,Queries,Config,SessionMgmt applicationStyle
    class Workflow,Events,Progress,Saga,Sampling domainStyle
    class Steps,ML,SamplingImpl,ProgressImpl,Prompts,Resources,Tracing,Utilities,Validation infraStyle
    class AnalyzeRepo,GenDockerfile,BuildImage,SetupCluster,LoadImage,GenManifests,DeployK8s,HealthProbe,VulnScan,Finalize workflowStyle
    class EventBus,EventHandlers,SagaCoord eventStyle
    class BuildOpt,PatternRec,ErrorHist,ResourcePred mlStyle
    class ErrorSystem,SessionStore,WorkspaceManager,BoltDB coreStyle
    class Docker,Registry,Kubernetes,Scanner,AI externalStyle

    %% Architecture Notes
    %% - 4-layer clean architecture with Domain-Driven Design
    %% - CQRS pattern with separate command and query handling
    %% - Event-driven coordination with domain events and saga orchestration
    %% - ML-powered optimization for build performance and pattern recognition
    %% - Single workflow tool with 10-step process and progress tracking
    %% - Rich error handling system with structured context
    %% - Session-based workspace isolation with BoltDB persistence
    %% - Comprehensive observability with distributed tracing