{
  "access_methods": [
    "Tools/Resources are automatically introspected by GoMCP",
    "Schemas available via MCP protocol introspection",
    "No manual schema maintenance required"
  ],
  "capabilities": {
    "ai_features": [
      "Repository analysis with language/framework detection",
      "Intelligent Dockerfile generation",
      "Automatic build error fixing",
      "Kubernetes deployment error resolution"
    ],
    "security": [
      "Container image vulnerability scanning (Trivy)",
      "Secret detection in code and configs",
      "Registry authentication support"
    ],
    "workflow_modes": [
      "Guided conversation mode via 'chat' tool",
      "Direct atomic tool execution",
      "Parallel stage execution in workflows"
    ]
  },
  "description": "Container Kit MCP Server - AI-powered containerization toolkit",
  "generated_at": "2025-06-26T18:10:38Z",
  "generator": "gomcp-automatic",
  "gomcp_version": "v1.6.3",
  "migration_complete": true,
  "note": "GoMCP provides automatic JSON schema generation via reflection",
  "resources": {
    "available_resources": [
      "logs/{level} - Server logs filtered by level (debug, info, warn, error)",
      "logs - All server logs with default filtering",
      "telemetry/metrics - Prometheus metrics endpoint",
      "telemetry/metrics/{name} - Specific metrics by name",
      "sessions - Active containerization sessions",
      "workflow/status - Current workflow execution status"
    ],
    "note": "All resources registered with GoMCP automatically have schemas generated"
  },
  "schema_version": "1.0.0",
  "source": "github.com/localrivet/gomcp",
  "tools": {
    "automatic_features": [
      "JSON Schema generation from Go struct types",
      "Automatic validation based on struct tags",
      "Type-safe parameter handling",
      "Documentation from field tags",
      "AI-powered error fixing for build and deploy operations"
    ],
    "by_category": {
      "Analysis": [
        {
          "category": "Analysis",
          "description": "Analyze a repository to determine language, framework, and containerization requirements",
          "name": "analyze_repository_atomic"
        }
      ],
      "Core": [
        {
          "category": "Core",
          "description": "Conversational interface for guided containerization workflow",
          "name": "chat"
        },
        {
          "category": "Core",
          "description": "[Advanced] Diagnostic tool for debugging server issues",
          "name": "server_status"
        },
        {
          "category": "Core",
          "description": "List all active containerization sessions with their metadata and status",
          "name": "list_sessions"
        },
        {
          "category": "Core",
          "description": "Delete a containerization session and clean up its resources",
          "name": "delete_session"
        }
      ],
      "Dockerfile": [
        {
          "category": "Dockerfile",
          "description": "Generate a Dockerfile using AI or templates based on repository analysis",
          "name": "generate_dockerfile_atomic"
        },
        {
          "category": "Dockerfile",
          "description": "Validate a Dockerfile for syntax errors and best practices",
          "name": "validate_dockerfile_atomic"
        }
      ],
      "Health": [
        {
          "category": "Health",
          "description": "Check the health and readiness of deployed applications",
          "name": "check_health_atomic"
        }
      ],
      "Image": [
        {
          "category": "Image",
          "description": "Build a Docker image from a Dockerfile with automatic error fixing",
          "name": "build_image_atomic"
        },
        {
          "category": "Image",
          "description": "Pull a Docker image from a registry",
          "name": "pull_image_atomic"
        },
        {
          "category": "Image",
          "description": "Push a Docker image to a registry with authentication",
          "name": "push_image_atomic"
        },
        {
          "category": "Image",
          "description": "Tag a Docker image with a new name or version",
          "name": "tag_image_atomic"
        }
      ],
      "Kubernetes": [
        {
          "category": "Kubernetes",
          "description": "Generate Kubernetes manifests (Deployment, Service, etc.) for an application",
          "name": "generate_manifests_atomic"
        },
        {
          "category": "Kubernetes",
          "description": "Deploy an application to Kubernetes with automatic error fixing",
          "name": "deploy_kubernetes_atomic"
        }
      ],
      "Security": [
        {
          "category": "Security",
          "description": "Scan a Docker image for security vulnerabilities using Trivy",
          "name": "scan_image_security_atomic"
        },
        {
          "category": "Security",
          "description": "Scan code and configuration files for exposed secrets",
          "name": "scan_secrets_atomic"
        }
      ]
    },
    "categories": [
      "Core",
      "Analysis",
      "Dockerfile",
      "Image",
      "Security",
      "Kubernetes",
      "Health"
    ],
    "note": "All tools registered with GoMCP automatically have schemas generated from their argument and result struct types",
    "total_count": 16
  }
}