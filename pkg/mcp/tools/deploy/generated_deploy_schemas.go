// Code generated by schemaGen. DO NOT EDIT.

package deploy

import (
	"github.com/Azure/container-kit/pkg/mcp/core/tools"
)

// Generated schemas for tool arguments
var (

	// AtomicDeployKubernetesArgsSchema is the generated JSON schema for AtomicDeployKubernetesArgs
	AtomicDeployKubernetesArgsSchema = &tools.JSONSchema{
		Type:        "object",
		Title:       "Atomic Deploy Kubernetes",
		Description: "",
		Properties: map[string]*tools.JSONSchema{
			"image_ref": {
				Type:        "string",
				Description: "Container image reference (e.g., myregistry.azurecr.io/myapp:latest)",
				// Required field
			},
			"app_name": {
				Type:        "string",
				Description: "Application name (default: from image name)",
			},
			"namespace": {
				Type:        "string",
				Description: "Kubernetes namespace (default: default)",
			},
			"replicas": {
				Type:        "integer",
				Description: "Number of replicas (default: 1)",
			},
			"port": {
				Type:        "integer",
				Description: "Application port (default: 80)",
			},
			"service_type": {
				Type:        "string",
				Description: "Service type: ClusterIP, NodePort, LoadBalancer (default: ClusterIP)",
			},
			"include_ingress": {
				Type:        "boolean",
				Description: "Generate and deploy Ingress resource",
			},
			"environment": {
				Type:        "object",
				Description: "Environment variables",
			},
			"cpu_request": {
				Type:        "string",
				Description: "CPU request (e.g., 100m)",
			},
			"memory_request": {
				Type:        "string",
				Description: "Memory request (e.g., 128Mi)",
			},
			"cpu_limit": {
				Type:        "string",
				Description: "CPU limit (e.g., 500m)",
			},
			"memory_limit": {
				Type:        "string",
				Description: "Memory limit (e.g., 512Mi)",
			},
			"generate_only": {
				Type:        "boolean",
				Description: "Only generate manifests, don't deploy",
			},
			"wait_for_ready": {
				Type:        "boolean",
				Description: "Wait for pods to become ready (default: true)",
			},
			"wait_timeout": {
				Type:        "integer",
				Description: "Wait timeout in seconds (default: 300)",
			},
			"skip_health_check": {
				Type:        "boolean",
				Description: "Skip health check validation after deployment",
			},
			"manifest_path": {
				Type:        "string",
				Description: "Custom path for generated manifests",
			},
			"force": {
				Type:        "boolean",
				Description: "Force deployment even if validation fails",
			},
			"dry_run": {
				Type:        "boolean",
				Description: "Preview changes without applying (shows kubectl diff output)",
			},
		},
		Required: []string{
			"image_ref",
		},
		AdditionalProperties: &[]bool{false}[0],
	}
)
