// Code generated by schemaGen. DO NOT EDIT.

package deploy

import (
	"github.com/Azure/container-kit/pkg/mcp/core/tools"
)

// Generated schemas for tool arguments
var (

	// GenerateManifestsArgsSchema is the generated JSON schema for GenerateManifestsArgs
	GenerateManifestsArgsSchema = &tools.JSONSchema{
		Type:        "object",
		Title:       "Generate Manifests",
		Description: "",
		Properties: map[string]*tools.JSONSchema{
			"app_name": {
				Type:        "string",
				Description: "Application name for labels and naming",
			},
			"image_ref": {
				Type:        "string",
				Description: "Container image reference",
				// Required field
			},
			"namespace": {
				Type:        "string",
				Description: "Kubernetes namespace",
			},
			"service_type": {
				Type:        "string",
				Description: "Service type (ClusterIP, NodePort, LoadBalancer)",
			},
			"replicas": {
				Type:        "integer",
				Description: "Number of replicas",
			},
			"resources": {
				Type:        "object",
				Description: "Resource requirements",
			},
			"environment": {
				Type:        "object",
				Description: "Environment variables",
			},
			"secrets": {
				Type:        "array",
				Description: "Secret references",
			},
			"include_ingress": {
				Type:        "boolean",
				Description: "Generate Ingress resource",
			},
			"helm_template": {
				Type:        "boolean",
				Description: "Generate as Helm template",
			},
			"configmap_data": {
				Type:        "object",
				Description: "ConfigMap data key-value pairs",
			},
			"configmap_files": {
				Type:        "object",
				Description: "ConfigMap file paths to mount",
			},
			"binary_data": {
				Type:        "object",
				Description: "ConfigMap binary data",
			},
			"ingress_hosts": {
				Type:        "array",
				Description: "Ingress host configuration",
			},
			"ingress_tls": {
				Type:        "array",
				Description: "Ingress TLS configuration",
			},
			"ingress_class": {
				Type:        "string",
				Description: "Ingress class name",
			},
			"service_ports": {
				Type:        "array",
				Description: "Service port configuration",
			},
			"load_balancer_ip": {
				Type:        "string",
				Description: "LoadBalancer IP for service",
			},
			"session_affinity": {
				Type:        "string",
				Description: "Session affinity (None, ClientIP)",
			},
			"workflow_labels": {
				Type:        "object",
				Description: "Additional labels from workflow session",
			},
			"registry_secrets": {
				Type:        "array",
				Description: "Registry credentials for pull secrets",
			},
			"generate_pull_secret": {
				Type:        "boolean",
				Description: "Generate image pull secret",
			},
			"validate_manifests": {
				Type:        "boolean",
				Description: "Validate generated manifests against K8s schemas",
			},
			"validation_options": {
				Type:        "object",
				Description: "Options for manifest validation",
			},
			"include_network_policy": {
				Type:        "boolean",
				Description: "Generate NetworkPolicy resource",
			},
			"network_policy_spec": {
				Type:        "object",
				Description: "NetworkPolicy specification",
			},
		},
		Required: []string{
			"image_ref",
		},
		AdditionalProperties: &[]bool{false}[0],
	}
)
