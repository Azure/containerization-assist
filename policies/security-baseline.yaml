version: '2.0'
metadata:
  name: Security Baseline
  description: Essential security rules for containerization
  category: security
  author: containerization-assist

defaults:
  enforcement: strict
  security:
    scanners:
      required: true
      tools: ['trivy']
    nonRootUser: true
  registries:
    allowed:
      - docker.io
      - gcr.io
      - ghcr.io
      - mcr.microsoft.com
    blocked:
      - '*localhost*'
      - '*:5000*'

rules:
  - id: block-root-user
    category: security
    priority: 95
    description: Detect and block root user in Dockerfiles
    conditions:
      - kind: regex
        pattern: '^USER\s+(root|0)\s*$'
        flags: m
    actions:
      block: true
      message: 'Running as root user is not allowed. Add USER directive with non-root user.'

  - id: require-user-directive
    category: security
    priority: 90
    description: Require USER directive in Dockerfile
    conditions:
      - kind: function
        name: hasPattern
        args: ['^USER\s+\w+', 'm']
    actions:
      warn: true
      message: 'USER directive recommended. Containers should run as non-root user.'

  - id: block-privileged
    category: security
    priority: 95
    description: Block privileged mode in container configs
    conditions:
      - kind: regex
        pattern: 'privileged:\s*true'
    actions:
      block: true
      message: 'Privileged containers are not allowed for security reasons.'

  - id: block-host-network
    category: security
    priority: 90
    description: Block host network access
    conditions:
      - kind: regex
        pattern: 'hostNetwork:\s*true'
    actions:
      block: true
      message: 'Host network access is not allowed. Use pod networking instead.'

  - id: block-secrets-in-env
    category: security
    priority: 100
    description: Detect secrets in environment variables
    conditions:
      - kind: regex
        pattern: '(password|secret|api[_-]?key|token).*=.*\S+'
        flags: i
    actions:
      block: true
      message: 'Secrets in plain environment variables are not allowed. Use Kubernetes Secrets.'
