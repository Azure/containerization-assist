import type { AITemplate } from './types';

export const DOTNET_ANALYSIS: AITemplate = {
  id: 'dotnet-analysis',
  name: 'AI-Powered .NET Project Analysis',
  description: 'Intelligent analysis of .NET projects with modern ecosystem awareness',
  version: '2.0.0',
  system:
    'You are a .NET ecosystem expert with comprehensive knowledge of:\n- .NET Framework, .NET Core, .NET 5+, and their migration paths\n- ASP.NET Core, Blazor, WPF, WinForms, and modern .NET frameworks\n- NuGet package management and dependency analysis\n- .NET containerization best practices and Docker optimizations\n- Security considerations for .NET applications\n- Performance tuning for different .NET workloads\n- Cloud-native .NET development patterns\n\nStay current with .NET ecosystem trends and recommend modern approaches.\n',
  user: 'Analyze this .NET project for containerization:\n\n**File Structure:**\n{{file_list}}\n\n**Project Files Content:**\n{{project_files_content}}\n\n**Configuration Files:**\n{{config_files}}\n\n**Directory Structure:**\n{{directory_structure}}\n\n**Current Date:** {{current_date}}\n\nProvide comprehensive .NET analysis in JSON format:\n{\n  "dotnet_version": "detected_or_recommended_version",\n  "target_framework": "net6.0|net7.0|net8.0|netframework4.8",\n  "project_type": {\n    "primary": "web|console|library|desktop|service|blazor",\n    "framework": "aspnetcore|mvc|webapi|blazor|wpf|winforms|worker",\n    "hosting_model": "kestrel|iis|selfhost|serverless",\n    "modern_alternatives": ["suggestions_for_modernization"]\n  },\n  "build_system": {\n    "sdk_style": true/false,\n    "package_management": "packagereference|packagesconfig|paket",\n    "build_optimizations": ["msbuild_improvements"],\n    "containerization_features": ["docker_specific_optimizations"]\n  },\n  "dependencies": {\n    "nuget_packages": ["essential_runtime_packages"],\n    "framework_dependencies": ["framework_specific_deps"],\n    "security_sensitive": ["packages_needing_security_attention"],\n    "outdated": ["packages_that_should_be_updated"],\n    "container_relevant": ["packages_affecting_containerization"]\n  },\n  "application_characteristics": {\n    "startup_type": "fast|slow|lazy",\n    "memory_profile": "low|medium|high",\n    "cpu_profile": "light|moderate|intensive",\n    "io_profile": "network|disk|both|minimal",\n    "scaling_pattern": "horizontal|vertical|both",\n    "state_management": "stateless|stateful|session"\n  },\n  "containerization_recommendations": {\n    "base_image_preferences": ["ordered_list_of_dotnet_images"],\n    "runtime_optimizations": {\n      "gc_settings": "recommended_gc_config",\n      "runtime_config": "dotnet_runtime_flags",\n      "globalization": "invariant_mode_recommendations"\n    },\n    "multi_stage_strategy": "recommended_multi_stage_approach",\n    "layer_optimization": ["strategies_for_dotnet_layer_caching"],\n    "aot_compilation": "native_aot_recommendations"\n  },\n  "security_considerations": {\n    "dotnet_security": [".net_specific_security_measures"],\n    "dependency_security": ["nuget_security_concerns"],\n    "runtime_security": ["runtime_security_recommendations"],\n    "https_configuration": ["ssl_tls_recommendations"]\n  },\n  "performance_optimizations": {\n    "build_time": ["faster_build_strategies"],\n    "startup_time": ["faster_startup_strategies"],\n    "runtime_performance": ["runtime_optimization_tips"],\n    "memory_optimization": ["memory_usage_improvements"]\n  },\n  "cloud_native_features": {\n    "configuration": ["appsettings_and_environment_config"],\n    "logging": ["structured_logging_recommendations"],\n    "health_checks": ["health_check_endpoints"],\n    "metrics": ["telemetry_and_monitoring"],\n    "service_discovery": ["service_mesh_integration"]\n  },\n  "migration_recommendations": {\n    "framework_migration": "migration_path_if_applicable",\n    "modernization_opportunities": ["code_modernization_suggestions"],\n    "breaking_changes": ["potential_issues_to_address"]\n  }\n}\n',
  outputFormat: 'json',
  max_tokens: 4000,
  temperature: 0.1,
} as const;
