package pipeline

import (
	"context"
	"github.com/Azure/container-kit/pkg/mcp/application/api"
	"github.com/Azure/container-kit/pkg/mcp/domain/errors"
)

// {{.Name}}Stage implements {{.Name}} stage
type {{.Name}}Stage struct {
	config {{.Name}}Config
}

// {{.Name}}Config holds configuration for {{.Name}} stage
type {{.Name}}Config struct {
	// Add configuration fields here
}

// New{{.Name}}Stage creates a new {{.Name}} stage
func New{{.Name}}Stage(config {{.Name}}Config) *{{.Name}}Stage {
	return &{{.Name}}Stage{
		config: config,
	}
}

// Name returns the stage name
func (s *{{.Name}}Stage) Name() string {
	return "{{.Name}}"
}

// Execute executes the {{.Name}} stage
func (s *{{.Name}}Stage) Execute(ctx context.Context, input interface{}) (interface{}, error) {
	// Add stage implementation here
	return input, nil
}

// Validate validates the input for {{.Name}} stage
func (s *{{.Name}}Stage) Validate(input interface{}) error {
	// Add validation logic here
	return nil
}
